# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      publish-packages:
        description: Publish packages?    
        type: boolean
        required: true
        default: false
      is-alpha:
        description: Alpha version?    
        type: boolean
        required: true
        default: true

env:
  SOLUTIONS: ModularPipelines.sln ModularPipelines.Examples.sln src/ModularPipelines.Azure/ModularPipelines.Azure.sln src/ModularPipelines.AmazonWebServices/ModularPipelines.AmazonWebServices.sln src/ModularPipelines.Google/ModularPipelines.Google.sln

jobs:
  pipeline:
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Pull Requests' }}
    runs-on: ubuntu-latest

    steps:
      - name: Add mask
        run: |
          echo "::add-mask::${{ secrets.DOTNET_FORMAT_PUSH_TOKEN }}" 
          echo "::add-mask::${{ secrets.NuGet__ApiKey }}"
          echo "::add-mask::${{ secrets.ADMIN_TOKEN }}"
          echo "::add-mask::${{ secrets.CODACY_APIKEY }}"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
      - name: Build ModularPipelines.Analyzers.sln
        run: dotnet build ModularPipelines.Analyzers.sln -c Release
      - name: Build
        run: |
          for SOLUTION in ${{ env.SOLUTIONS }}
          do
            dotnet build $SOLUTION -c Release
          done
      - name: Run Pipeline
        run: dotnet run -c Release --framework net8.0
        working-directory: "src/ModularPipelines.Build"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DOTNET_ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}
          NuGet__ApiKey: ${{ github.ref == 'refs/heads/main' && secrets.NuGet__ApiKey || null }}
          GitHub__Actor: ${{ github.actor }}
          GitHub__Repository__Id: ${{ github.repository_id }}
          GitHub__StandardToken: ${{ secrets.DOTNET_FORMAT_PUSH_TOKEN }}
          GitHub__AdminToken: ${{ secrets.ADMIN_TOKEN }}
          Publish__ShouldPublish: ${{ github.event.inputs.publish-packages || false}}
          Publish__IsAlpha: ${{ github.event.inputs.is-alpha || true}}
          Codacy__ApiKey: ${{ secrets.CODACY_APIKEY }}
          CodeCov__Token: ${{ secrets.CODECOV_TOKEN }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
