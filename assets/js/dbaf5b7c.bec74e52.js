"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[219],{5907:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var o=n(4848),s=n(8453);const t={title:"Skipping Modules"},r="Skipping Modules",d={id:"how-to/skipping",title:"Skipping Modules",description:"Overriding ShouldSkip",source:"@site/docs/how-to/skipping.md",sourceDirName:"how-to",slug:"/how-to/skipping",permalink:"/ModularPipelines/docs/how-to/skipping",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Skipping Modules"},sidebar:"tutorialSidebar",previous:{title:"Sharing data across modules",permalink:"/ModularPipelines/docs/how-to/sharing-data"},next:{title:"Module History",permalink:"/ModularPipelines/docs/how-to/storing-and-retrieving-results"}},l={},a=[{value:"Overriding ShouldSkip",id:"overriding-shouldskip",level:2},{value:"Example",id:"example",level:3},{value:"History",id:"history",level:2},{value:"Run Conditions",id:"run-conditions",level:2},{value:"Categories",id:"categories",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h1,{id:"skipping-modules",children:"Skipping Modules"}),"\n",(0,o.jsx)(i.h2,{id:"overriding-shouldskip",children:"Overriding ShouldSkip"}),"\n",(0,o.jsx)(i.p,{children:"Within a module, we can override the ShouldSkip module with custom logic."}),"\n",(0,o.jsxs)(i.p,{children:["We return ",(0,o.jsx)(i.code,{children:"return SkipDecision.Skip(reason)"})," to skip and ",(0,o.jsx)(i.code,{children:"SkipDecision.DoNotSkip"})," to not skip. The reason is used in the reporting so we can easily see why a module did or didn't run."]}),"\n",(0,o.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-csharp",children:'public class MyModule : Module<CommandResult>\n{\n    protected override Task<SkipDecision> ShouldSkip(IPipelineContext context)\n    {\n        if (context.Git().Information.BranchName == "main")\n        {\n            return SkipDecision.DoNotSkip.AsTask();\n        }\n        \n        return SkipDecision.Skip("This should only run on the main branch").AsTask();\n    }\n\n'})}),"\n",(0,o.jsx)(i.h2,{id:"history",children:"History"}),"\n",(0,o.jsxs)(i.p,{children:["If a module was skipped, we can attempt to find its history from a previous run. See ",(0,o.jsx)(i.a,{href:"storing-and-retrieving-results",children:"History"})]}),"\n",(0,o.jsx)(i.h2,{id:"run-conditions",children:"Run Conditions"}),"\n",(0,o.jsxs)(i.p,{children:["See ",(0,o.jsx)(i.a,{href:"run-conditions",children:"Run Conditions"})]}),"\n",(0,o.jsx)(i.h2,{id:"categories",children:"Categories"}),"\n",(0,o.jsxs)(i.p,{children:["See ",(0,o.jsx)(i.a,{href:"categories",children:"Categories"})]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>d});var o=n(6540);const s={},t=o.createContext(s);function r(e){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:i},e.children)}}}]);