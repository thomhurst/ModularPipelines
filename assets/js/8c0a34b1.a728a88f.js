"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[871],{9973:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>u,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"how-to/run-conditions","title":"Run conditions","description":"Run conditions gives us a way to easily skip or run modules based on some custom, reusable logic.","source":"@site/docs/how-to/run-conditions.md","sourceDirName":"how-to","slug":"/how-to/run-conditions","permalink":"/ModularPipelines/docs/how-to/run-conditions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Run conditions","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Sharing data across modules","permalink":"/ModularPipelines/docs/how-to/sharing-data"},"next":{"title":"Retry Policies","permalink":"/ModularPipelines/docs/how-to/retry-policy"}}');var i=o(4848),s=o(8453);const r={title:"Run conditions",sidebar_position:5},d="Run conditions",u={},a=[{value:"Mandatory run conditions",id:"mandatory-run-conditions",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"run-conditions",children:"Run conditions"})}),"\n",(0,i.jsx)(e.p,{children:"Run conditions gives us a way to easily skip or run modules based on some custom, reusable logic."}),"\n",(0,i.jsx)(e.p,{children:"Run conditions are generally controlled by attributes, placed upon your module."}),"\n",(0,i.jsx)(e.p,{children:"Some of these exist out-of-the-box\ne.g.\n[RunOnLinux]\n[RunOnWindows]\n[RunOnMacOS]"}),"\n",(0,i.jsxs)(e.p,{children:["You can create your own custom run conditions by inheriting from ",(0,i.jsx)(e.code,{children:"RunConditionAttribute"})," and plugging custom logic into the ",(0,i.jsx)(e.code,{children:"Condition"})," method."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:'public class MyCustomRunConditionAttribute : RunConditionAttribute\n{\n    public override async Task<bool> Condition(IPipelineHookContext pipelineContext)\n    {\n        var response = await pipelineContext.Http.SendAsync("https://www.example.com/ping");\n        return response.StatusCode == HttpStatusCode.OK;\n    }\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:["Returning ",(0,i.jsx)(e.code,{children:"true"})," means the module will run. Returning ",(0,i.jsx)(e.code,{children:"false"})," means it won't, UNLESS another run condition attribute returns true."]}),"\n",(0,i.jsxs)(e.p,{children:["Multiple can be supplied, and only one needs to return ",(0,i.jsx)(e.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(e.p,{children:"e.g."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"[RunOnLinux]\n[RunOnMacOS]\npublic class MyModule : Module\n"})}),"\n",(0,i.jsx)(e.p,{children:"The above module will run on either Linux, or Mac. But not windows."}),"\n",(0,i.jsx)(e.h2,{id:"mandatory-run-conditions",children:"Mandatory run conditions"}),"\n",(0,i.jsx)(e.p,{children:"Mandatory run conditions are similar to standard run conditions, but they MUST return true to run the module. If ANY return false, then the module will not run."}),"\n",(0,i.jsxs)(e.p,{children:["You can create your own custom mandatory run conditions by inheriting from ",(0,i.jsx)(e.code,{children:"MandatoryRunConditionAttribute"})," and plugging custom logic into the ",(0,i.jsx)(e.code,{children:"Condition"})," method."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:'public class MyMandatoryCustomRunConditionAttribute : MandatoryRunConditionAttribute\n{\n    public override async Task<bool> Condition(IPipelineHookContext pipelineContext)\n    {\n        var response = await pipelineContext.Http.SendAsync("https://www.example.com/service1/mustbeup/ping");\n        return response.StatusCode == HttpStatusCode.OK;\n    }\n}\n\npublic class MyMandatoryCustomRunCondition2Attribute : MandatoryRunConditionAttribute\n{\n    public override async Task<bool> Condition(IPipelineHookContext pipelineContext)\n    {\n        var response = await pipelineContext.Http.SendAsync("https://www.example.com/service2/mustbeup/ping");\n        return response.StatusCode == HttpStatusCode.OK;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"Take the above 2 mandatory conditions and this module:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"[MyMandatoryCustomRunCondition]\n[MyMandatoryCustomRunCondition2]\npublic class MyModule : Module\n"})}),"\n",(0,i.jsx)(e.p,{children:"This module will only run if BOTH conditions return true. If either return false, then the module will be skipped."})]})}function l(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>r,x:()=>d});var t=o(6540);const i={},s=t.createContext(i);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);