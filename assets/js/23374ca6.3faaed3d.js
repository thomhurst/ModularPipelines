"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[278],{7403:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"README","title":"Modular Pipelines","description":"About","source":"@site/docs/README.md","sourceDirName":".","slug":"/","permalink":"/ModularPipelines/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Modular Pipelines","sidebar_position":0},"sidebar":"tutorialSidebar","next":{"title":"Fundamentals","permalink":"/ModularPipelines/docs/fundamentals"}}');var s=i(4848),t=i(8453);const o={title:"Modular Pipelines",sidebar_position:0},r="Modular Pipelines",a={},d=[{value:"About",id:"about",level:2},{value:"Features",id:"features",level:2},{value:"Why the name?",id:"why-the-name",level:2},{value:"Modular",id:"modular",level:3},{value:"Pipeline",id:"pipeline",level:3},{value:"Module",id:"module",level:3}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"modular-pipelines",children:"Modular Pipelines"})}),"\n",(0,s.jsx)(n.h2,{id:"about",children:"About"}),"\n",(0,s.jsx)(n.p,{children:"Modular Pipelines is a framework for writing your pipeline in C#. Giving you strong types, intellisense, parallelisation, and the entire .NET ecosystem at your fingertips."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Parallel execution"}),"\n",(0,s.jsx)(n.li,{children:"Dependency management"}),"\n",(0,s.jsx)(n.li,{children:"Familiar C# code"}),"\n",(0,s.jsx)(n.li,{children:"Ability to debug pipelines"}),"\n",(0,s.jsx)(n.li,{children:"Ability to run pipelines locally, even creating versions for setting up local development"}),"\n",(0,s.jsx)(n.li,{children:"Strong typing, where different modules/steps can pass data to one another"}),"\n",(0,s.jsx)(n.li,{children:"Dependency collision detection - Don't worry about accidentally making two modules dependent on each other"}),"\n",(0,s.jsx)(n.li,{children:"Numerous helpers to do things like: Search files, check checksums, (un)zip folders, download files, install files, execute CLI commands, hash data, and more"}),"\n",(0,s.jsx)(n.li,{children:"Easy to Skip or Ignore Failures for each individual module by passing in custom logic"}),"\n",(0,s.jsx)(n.li,{children:"Hooks that can run before and/or after modules"}),"\n",(0,s.jsx)(n.li,{children:"Pipeline requirements - Validate your requirements are met before executing your pipeline, such as a Linux operating system"}),"\n",(0,s.jsx)(n.li,{children:"Easy to use File and Folder classes, that can search, read, update, delete and more"}),"\n",(0,s.jsx)(n.li,{children:"Source controlled pipelines"}),"\n",(0,s.jsx)(n.li,{children:"Build agent agnostic - Can easily move to a different build system without completely recreating your pipeline"}),"\n",(0,s.jsx)(n.li,{children:"No need to learn new syntaxes such as YAML defined pipelines"}),"\n",(0,s.jsx)(n.li,{children:"Strongly typed wrappers around command line tools"}),"\n",(0,s.jsx)(n.li,{children:"Utilise existing .NET libraries"}),"\n",(0,s.jsx)(n.li,{children:"Secret obfuscation"}),"\n",(0,s.jsxs)(n.li,{children:["Grouped logging, and the ability to extend sources by adding to the familiar ",(0,s.jsx)(n.code,{children:"ILogger"})]}),"\n",(0,s.jsx)(n.li,{children:"Run based on categories"}),"\n",(0,s.jsx)(n.li,{children:"Easy to read exceptions"}),"\n",(0,s.jsx)(n.li,{children:"Dynamic console progress reporting (if the console supports interactive mode)"}),"\n",(0,s.jsx)(n.li,{children:"Pretty results table"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"why-the-name",children:"Why the name?"}),"\n",(0,s.jsx)(n.h3,{id:"modular",children:"Modular"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"consisting of separate parts that, when combined, form a complete whole"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"pipeline",children:"Pipeline"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"any channel or means whereby something is passed on"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"module",children:"Module"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"a self-contained unit or item, such as an assembly of electronic components and associated wiring or a segment of computer software, which itself performs a defined task and can be linked with other such units to form a larger system"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var l=i(6540);const s={},t=l.createContext(s);function o(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);