"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[792],{9306:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>u,toc:()=>l});var i=n(4848),o=n(8453);const r={title:"Inheriting"},s="Inheriting",u={id:"how-to/inheriting",title:"Inheriting",description:"Each 'Module' is expected to be registered only once. If you build a custom module that you'd like to instantiate multiple times but with different options, then you should create a new Module type that inherits from an abstract base module.",source:"@site/docs/how-to/inheriting.md",sourceDirName:"how-to",slug:"/how-to/inheriting",permalink:"/ModularPipelines/docs/how-to/inheriting",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Inheriting"},sidebar:"tutorialSidebar",previous:{title:"Ignoring Failures",permalink:"/ModularPipelines/docs/how-to/ignoring-failures"},next:{title:"Logging",permalink:"/ModularPipelines/docs/how-to/logging"}},a={},l=[];function c(e){const t={h1:"h1",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"inheriting",children:"Inheriting"}),"\n",(0,i.jsx)(t.p,{children:"Each 'Module' is expected to be registered only once. If you build a custom module that you'd like to instantiate multiple times but with different options, then you should create a new Module type that inherits from an abstract base module."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>u});var i=n(6540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);